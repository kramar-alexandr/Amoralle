SetLangMode(LangLatvian,"LAT",0);

window PY_SettingsTClass:2
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  Integer tilenr;

  WindowBegin("Amoralle - iestat´jumi",PY_SettingsTClass,CGSbl,-);
  SetWRect(64,80,700,580);
  SetBlid(PY_SettingsBlock);
  vs = 20;
  Tile(0,50,false,"",-);
  TileButton(1,"Vari‚cijas");
  //TileButton(2,"");   
  Tile(1,110,true,"1",PY_ColVAR);
  EditField(h=300,v=6,50,"Kr‚su vari‚cijas grupa",Normal,PY_ColVAR,false,VARGSClass);//payout-21; edz
  EditField(h=300,v+=vs,50,"Pied‚v‚juma vari‚ciju valoda",Normal,PY_VARLang,false,LangSClass);//payout-21; edz
  //Tile(2,90,true,"2",-);  
  EndWindow;
  
  return;
end;


window SwedBankImportSTIClass:1// Edit ************************** BPI Ukraine - KramarAlexandr - Tuesday, 17 April 2018 18:01:52
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real f,h,v,vm,vs;

  WindowBegin("SwedBank import Statement ",SwedBankImportSTIClass,CGIcW,RcType); 
  SetWRect(20,80,480,200);
  h = 70;
  v = 40;
  vs = 20;
  StaticText(h,v+=vs,"Import: SwedBank Bank To Customer Statement",false);
  StaticText(h,v+=vs,"File format: XML",false);
  StaticText(h,v+=vs,"Based on: Bank To Customer Statement V02 camt.053.001.02",false);

  EndWindow;
  return;
end;

window SwedbankImportLClass:1// Edit ************************** BPI Ukraine - KramarAlexandr - Wednesday, 18 April 2018 10:00:30
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Swedbank Imports",SwedbankImportLClass,CGmlist,-);
  SetWRect(20,80,1300,355);
  Sizeable(-1,-1,0,0);
  SpawnClass(SwedbankImportDClass);
  UseView(SwedbankImportVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,1,"NtryRef",NtryRef,false,NtryRef);
  RlCol(140,140,"BankID",BankID,false);
  RlCol(210,210,"OwnID",OwnID,false);
  RlColKey(280,280,"Date",BookgDt,false,BookgDt);
  RlCol(350,350,"IBAN",IBAN,false);
  RlCol(460,460,"Name",RecName,false);
  RlCol(660,660,"Cmt",Ustrd,false);
  RlCol(-340,-340,"PayType",PayType,false);
  RlCol(-280,-280,"OrgId",OrgId,false);
  RlColKey(-180,-180,"D/C",CdtDbtInd,false,CdtDbtInd);
  RlCol(-130,-130,"Ammount",AmtCcy,false);
  RlCol(-60,-60,"Curncy",CurncyCode,true);
  //SpecialMenu("DellAll",'r',0,"DelAllDsm");
  SearchField("Search");
  EndWindow;
end;

window SwedbankImportDClass:1// Edit ************************** BPI Ukraine - KramarAlexandr - Wednesday, 18 April 2018 10:00:30
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
	real f,h,v,vm,vs;
	
  WindowBegin("Swedbank Imports",SwedbankImportDClass,CGview,-);
  SetWRect(20,80,250,250);
  Sizeable(-1,-1,0,0);
  UseView(SwedbankImportVc);
  
  vs = 20;
  EditField(h=100,v=30,150,"NtryRef",ViewOnly,NtryRef,false,0);
  EditField(h=100,v+=vs,150,"BankID",ViewOnly,BankID,false,0);
  EditField(h=100,v+=vs,150,"OwnID",ViewOnly,OwnID,false,0);
  EditField(h=100,v+=vs,150,"Date",ViewOnly,BookgDt,false,0);
  EditField(h=100,v+=vs,150,"IBAN",ViewOnly,IBAN,false,0);
  EditField(h=100,v+=vs,-20,"Name",ViewOnly,RecName,false,0);
  EditField(h=100,v+=vs,-20,"Comment",ViewOnly,Ustrd,false,0);
  EditField(h=100,v+=vs,150,"D/C",ViewOnly,CdtDbtInd,false,0);
  EditField(h=100,v+=vs,150,"Ammount",ViewOnly,AmtCcy,false,0);
  EditField(h=100,v+=vs,150,"Curncy",ViewOnly,CurncyCode,false,0); 
  EditField(h=100,v+=vs,150,"OrgId",ViewOnly,OrgId,false,0); 
  
  SearchField("Search");
  EndWindow;
end;


window DOLShopifyTClass:1// Edit ************************** BPI Ukraine - KramarAlexandr - Friday, 18 May 2018 09:26:00
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;
  v = 6; vs = 20; h = 90;

  WindowBegin("Amoralle - Shopify Settings",DOLShopifyTClass,CGSbl,ItemSettingType);
  SetWRect(20,80,700,480);
  SetBlid(DOLShopifyBlock);
  Sizeable(-1,-1,0,0);
  Tile(0,20,false,"",APIUser);
  TileButton(1,"API Access");
  TileButton(2,"Automatic Sync (SERP -> Shopify)");
  TileButton(3,"Automatic Sync (Shopify -> SERP)");
  TileButton(4,"Special options");
  Tile(1,120,true,"",APIUser);
  EditField(h,v = 10,-20,"API Key",Normal,APIUser,false,0);
  EditField(h,v += vs,-20,"API Password",Normal,APIPass,false,0);
  EditField(h,v += vs,200,"Shopify URL",Normal,ShopifyURL,false,0);
  EditField(h,v += vs,80,"Shopify Port",Normal,ShopifyPort,true,0);
  Tile(2,120,true,"",UpdStockInertval);
  //CheckBox(h,v=20,0,"Update Items (!for testing only!) (restart required)",UpdItems);
  ButtonFrame(h,v+=30,270,5,"");
  CheckBox(h,v+=1,0,"Update Stock Levels",UpdStock);
  EditField(h+100,v+=vs,60,"Every",Normal,UpdStockInertval,false,0);
  StaticText(h+155,v+10,"minutes",false);
  EditField(h+100,v+=vs,60,"Location class",Normal,StockClass,false,LocClSClass);
  //EditField(h+100,v+=vs,60,"Inch variety group",Normal,InchVARGCode,false,VARGSClass);
  CheckBox(h,v+=vs,0,"Update Stock Levels when Stock level Changes",UpdStockAlways);
  //CheckBox(h,v+=20,0,"Update Price When Item is Updated",UpdPriceAlways); // EVS: DOL-167
  EndFrame;
  Tile(3,120,true,"",SaveReqResp);
  h=h+50;
  EditField(h,v = 10,80,"Def. customer",Normal,DefWebUserCode,false,CUSClass);
  EditField(h,v += vs,80,"Def. Location",Normal,DefWebLocation,false,LocationSClass);
  EditField(h,v += vs,80,"Def. Order Class",Normal,DefWebOrdClass,false,OrderClassSClass);
  EditField(h,v += vs,80,"Shopify Location Id",Normal,ShpifyLocId,false,ShopifyLocSClass);
  EditField(h,v += vs,80,"Get Orders every minutes",Normal,GetOrdFrq,false,0);
  EditField(h,v += vs,80,"Deliver after",Normal,DeliveryAfter,false,0);// Edit ************************** BPI Ukraine - KramarAlexandr - Tuesday, 11 September 2018 09:18:00
  Tile(4,120,true,"",SaveReqResp);
  StaticText(h,v=20,"NOTE: Do not change anything unless insctructed",false);
  CheckBox(h,v+=20,0,"Save request and response data",SaveReqResp);
  SpecialMenu("Send Stock Levels Once",' ',0,"DOLShopifySendStockSm");
  EndWindow;

end;

window DOLGetShopifyProdIDVClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real v,vs,h,vm;

  WindowBegin("Dolita - Load Shopify Product IDs",DOLGetShopifyProdIDVClass,CGMnt,RcType);
  SetWRect(20,80,350,240);
  /*ButtonFrame(h=80,v=20,200,3,"Action");
  RadioButton(h,v,0,0,"Download Shopify IDs",ArtMode);
  RadioButton(h,v+=16,2,0,"Download Shopify Prices",ArtMode); // EVS: DOL-167
  RadioButton(h,v+=16,1,0,"Clear All Shopify IDs",ArtMode);
  EndFrame;
  // EVS: DOL-167
  ButtonFrame(h=80,v+=60,200,2,"Include Products");
  RadioButton(h,v,0,0,"Published only",flags[0]);
  RadioButton(h,v+=16,1,0,"All",flags[0]);
  EndFrame;
  // :EVS*/
  EndWindow;

  return;
end;


window DOLGetShopifyOrdersVClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real v,vs,h,vm;

  WindowBegin("Dolita - Load Shopify Product IDs",DOLGetShopifyOrdersVClass,CGMnt,RcType);
  SetWRect(20,80,350,240);
  PeriodField(h=50,v=6,"Status");
  ButtonFrame(h,vm=(v+=41),123,4,"Filter");
  RadioButton(h,v,0,0,"Open",flags[2]);
  RadioButton(h,v+=16,1,0,"Closed",flags[2]);
  RadioButton(h,v+=16,2,0,"Canceled",flags[2]);
  RadioButton(h,v+=16,3,0,"Any",flags[2]);
  EndWindow;

  return;
end;

window DOLGetShopifyLocationsVClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real v,vs,h,vm;

  WindowBegin("Dolita - Load Shopify Locations IDs",DOLGetShopifyLocationsVClass,CGMnt,RcType);
  SetWRect(20,80,350,240);
  
  EndWindow;

  return;
end;

window ShopifyLocLClass:1// Edit ************************** BPI Ukraine - KramarAlexandr - Tuesday, 8 May 2018 13:40:07
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Shopify Locations",ShopifyLocLClass,CGmlist,-);
  SetWRect(20,80,600,355);
  Sizeable(-1,-1,0,0);
  SpawnClass(ShopifyLocDClass);
  UseView(ShopifyLocVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,1,"Id",Id,false,Id);
  RlCol(80,80,"Name",Name,false);
  RlCol(210,210,"address1",address1,false);
  RlCol(350,350,"address2",address2,false);
  RlCol(-120,-120,"city",city,false);
  
  SearchField("Search");
  EndWindow;
end;

window ShopifyLocSClass:1// Edit ************************** BPI Ukraine - KramarAlexandr - Tuesday, 8 May 2018 13:40:07
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Shopify Locations",ShopifyLocSClass,CGslist,-);
  SetWRect(20,80,600,355);
  Sizeable(-1,-1,0,0);
  SpawnClass(ShopifyLocDClass);
  UseView(ShopifyLocVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,1,"Id",Id,false,Id);
  RlCol(80,80,"Name",Name,false);
  RlCol(210,210,"address1",address1,false);
  RlCol(350,350,"address2",address2,false);
  RlCol(-120,-120,"city",city,false);
  
  SearchField("Search");
  EndWindow;
end;


window ShopifyLocDClass:1// Edit ************************** BPI Ukraine - KramarAlexandr - Tuesday, 8 May 2018 13:40:10
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
	real f,h,v,vm,vs;
	
  WindowBegin("Shopify Location",ShopifyLocDClass,CGview,-);
  SetWRect(20,80,250,250);
  Sizeable(-1,-1,0,0);
  UseView(ShopifyLocVc);
  
  vs = 20;
  EditField(h=100,v=30,150,"Id",ViewOnly,Id,false,0);
  EditField(h=100,v+=vs,150,"Name",ViewOnly,Name,false,0);
  EditField(h=100,v+=vs,150,"address1",ViewOnly,address1,false,0);
  EditField(h=100,v+=vs,150,"address2",ViewOnly,address2,false,0);
  EditField(h=100,v+=vs,150,"city",ViewOnly,city,false,0);
 
  
  SearchField("Search");
  EndWindow;
end;


window ShopifyProductsLClass:1// Edit ************************** BPI Ukraine - KramarAlexandr - Tuesday, 8 May 2018 13:40:07
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Shopify Products",ShopifyProductsLClass,CGmlist,-);
  SetWRect(20,80,700,355);
  Sizeable(-1,-1,0,0);
  SpawnClass(ShopifyProductsDClass);
  UseView(ShopifyProductsVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,1,"Id",Id,false,Id);
  RlCol(80,80,"VariantId",VariantId,false);
  RlCol(160,160,"Vproduct_id",Vproduct_id,false);
  RlCol(340,340,"Vinvent_id",Vinvent_id,false);
  RlCol(420,420,"Name",Name,false);
  RlCol(500,500,"VarName",VarName,false);
  RlCol(-100,-100,"SKU",SKU,false);
  
  SearchField("Search");
  EndWindow;
end;

window ShopifyProductsDClass:1// Edit ************************** BPI Ukraine - KramarAlexandr - Tuesday, 8 May 2018 13:40:10
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
	real f,h,v,vm,vs;
	
  WindowBegin("Shopify Location",ShopifyProductsDClass,CGview,-);
  SetWRect(20,80,250,250);
  Sizeable(-1,-1,0,0);
  UseView(ShopifyProductsVc);
  
  vs = 20;
  EditField(h=100,v=30,150,"Id",ViewOnly,Id,false,0);
  EditField(h=100,v+=vs,150,"VariantId",ViewOnly,VariantId,false,0);
  EditField(h=100,v+=vs,150,"Vproduct_id",ViewOnly,Vproduct_id,false,0);
  EditField(h=100,v+=vs,150,"Vinvent_id",ViewOnly,Vinvent_id,false,0);
  EditField(h=100,v+=vs,150,"Name",ViewOnly,Name,false,0);
  EditField(h=100,v+=vs,150,"VarName",ViewOnly,VarName,false,0);
  EditField(h=100,v+=vs,150,"SKU",ViewOnly,SKU,false,0);
  
  SearchField("Search");
  EndWindow;
end;

window CreateItemsBarcode_BPIVClass:1// Edit ************************** BPI Ukraine - KramarAlexandr - 01, 28 05 2018 16:38:29
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real v,vs,h,vm;

  WindowBegin("Generate Barcodes for all items",CreateItemsBarcode_BPIVClass,CGMnt,RcType);
  SetWRect(20,80,350,240);
  	EditField(h=100,v=30,150,"Code",Normal,f1,false,INSClass);
  EndWindow;

  return;
end;


window BankImportSetTClass:1// Edit ************************** BPI Ukraine - KramarAlexandr - Wednesday, 13 June 2018 10:15:55
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;
  v = 6; vs = 20; h = 90;

  WindowBegin("Amoralle - Banking Statement Import settings",BankImportSetTClass,CGSbl,-);
  SetWRect(20,80,400,480);
  SetBlid(BankImportSetBlock);
  Sizeable(-1,-1,0,0);
  	h = 50;
  	CheckBox(h,v+=20,0,"Import payments",ImpPaym);
  	CheckBox(h,v+=20,0,"Import payment orders",ImpPaymOrd);
  	CheckBox(h,v+=20,0,"Import charges",ImpCharges);
  	v=v+20;
		ButtonFrame(h,v=v+20,210,2,"Import is done by connecting");
		RadioButton(h,v,0,0,"The oldest invoices (FIFO method)",InvFIFO);
		RadioButton(h,v+=16,1,0,"The oldest due dates",InvFIFO);
  EndWindow;

end;

window ShopifyNewCustTClass:1// Edit ************************** BPI Ukraine - KramarAlexandr - Wednesday, 13 June 2018 10:15:51
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;
  v = 6; vs = 20; h = 90;

  WindowBegin("Amoralle - Shopify: New customer creation",ShopifyNewCustTClass,CGSbl,-);
  SetWRect(20,80,400,480);
  SetBlid(ShopifyNewCustBlock);
  Sizeable(-1,-1,0,0);
  	h = 50;
  	EditField(h=100,v=30,150,"CustCatDOM",Normal,CustCatDOM,false,CCatSClass);
  	EditField(h=100,v+=vs,150,"CustCatEU",Normal,CustCatEU,false,CCatSClass);
  	EditField(h=100,v+=vs,150,"CustCatEXP",Normal,CustCatEXP,false,CCatSClass);
		EditField(h=100,v+=vs,150,"Classification",Normal,Classification,false,CClassSClass);
		EditField(h=100,v+=vs,150,"VATNr",Normal,VATNr,false,0);
		EditField(h=100,v+=vs,150,"RegNr1",Normal,RegNr1,false,0);
		EditField(h=100,v+=vs,150,"PayDeal",Normal,PayDeal,false,PDSClass);

  EndWindow;

end;